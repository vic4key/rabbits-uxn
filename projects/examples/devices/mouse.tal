( Mouse:
	Paint with 3 colors with each mouse button. )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &modx $2 &mody $2

|0000

@line
	&x $2 &y $2 &dx $2 &dy $2 &e1 $2
@pointer
	&x $2 &y $2 &lastx $2 &lasty $2 &state $1

|0100 ( -> )

	( theme )
	#a0f0 .System/r DEO2
	#40ff .System/g DEO2
	#60ff .System/b DEO2

	( vectors )
	;on-mouse .Mouse/vector DEO2

BRK

@on-mouse ( -> )

	;pointer-icn .Screen/addr DEO2
	( clear last cursor )
	.pointer/x LDZ2 .Screen/x DEO2
	.pointer/y LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO
	( draw new cursor )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .Screen/x DEO2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .Screen/y DEO2
	#43 .Mouse/state DEI #00 NEQ DUP ADD SUB .Screen/sprite DEO
	( on down )
	.Mouse/state DEI #00 NEQ .pointer/state LDZ #00 EQU AND ,on-mouse-down JCN
	( on drag )
	.Mouse/state DEI ,on-mouse-drag JCN
	.Mouse/state DEI .pointer/state STZ

BRK

@on-mouse-down ( -> )

	( record start position )
	.Mouse/x DEI2 DUP2 .pointer/x STZ2 .pointer/lastx STZ2
	.Mouse/y DEI2 DUP2 .pointer/y STZ2 .pointer/lasty STZ2
	.Mouse/state DEI .pointer/state STZ

BRK

@on-mouse-drag ( -> )
	
	( draw line )
	.pointer/lastx LDZ2
	.pointer/lasty LDZ2
	.pointer/x LDZ2
	.pointer/y LDZ2
	.Mouse/state DEI INC
	;draw-line JSR2

	( record last position )
	.Mouse/x DEI2 .pointer/lastx STZ2
	.Mouse/y DEI2 .pointer/lasty STZ2
	.Mouse/state DEI .pointer/state STZ

BRK

@draw-line ( x1* y1* x2* y2* color -- )

	( load ) STH ,&y STR2 ,&x STR2 .line/y STZ2 .line/x STZ2
	,&x LDR2 .line/x LDZ2 SUB2 ;abs2 JSR2 .line/dx STZ2
	#0000 ,&y LDR2 .line/y LDZ2 SUB2 ;abs2 JSR2 SUB2 .line/dy STZ2
	#ffff #00 .line/x LDZ2 ,&x LDR2 ;lts2 JSR2 #10 SFT2 ADD2 ,&sx STR2
	#ffff #00 .line/y LDZ2 ,&y LDR2 ;lts2 JSR2 #10 SFT2 ADD2 ,&sy STR2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		.line/x LDZ2 DUP2 .Screen/x DEO2 [ LIT2 &x $2 ] EQU2
		.line/y LDZ2 DUP2 .Screen/y DEO2 [ LIT2 &y $2 ] EQU2
			STHkr .Screen/pixel DEO
			AND ,&end JCN
		.line/e1 LDZ2 #10 SFT2 DUP2
		.line/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x LDZ2 [ LIT2 &sx $2 ] ADD2 .line/x STZ2
		&skipy
		.line/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y LDZ2 [ LIT2 &sy $2 ] ADD2 .line/y STZ2
		&skipx
		,&loop JMP
	&end
	POPr

JMP2r

@abs2 DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 JMP2r
@lts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 GTH2 JMP2r
@gts2 #8000 STH2k ADD2 SWP2 STH2r ADD2 LTH2 JMP2r

@pointer-icn 80c0 e0f0 f8e0 1000
